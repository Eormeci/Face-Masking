{"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ErDbBVYynhmJ","executionInfo":{"status":"ok","timestamp":1721394399238,"user_tz":-180,"elapsed":2758,"user":{"displayName":"Ahmet Enhar Örmeci","userId":"13665870549201093837"}},"outputId":"5f2e0ec3-e5d6-4342-ef6b-d46f60920b07"},"id":"ErDbBVYynhmJ","execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","source":["# **Yüz Kesme**"],"metadata":{"id":"kTmeAgcYwDll"},"id":"kTmeAgcYwDll"},{"cell_type":"code","source":["!pip install rarfile\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GXo_smDTJyVK","executionInfo":{"status":"ok","timestamp":1721396213150,"user_tz":-180,"elapsed":11128,"user":{"displayName":"Ahmet Enhar Örmeci","userId":"13665870549201093837"}},"outputId":"4e02909a-63e2-4592-ae55-3170d959c794"},"id":"GXo_smDTJyVK","execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting rarfile\n","  Downloading rarfile-4.2-py3-none-any.whl (29 kB)\n","Installing collected packages: rarfile\n","Successfully installed rarfile-4.2\n"]}]},{"cell_type":"code","source":["import cv2\n","import numpy as np\n","import dlib\n","import os\n","\n","def extract_index_nparray(nparray):\n","    index = None\n","    for num in nparray[0]:\n","        index = num\n","        break\n","    return index\n","\n","# Dlib model dosyasını indirme\n","model_url = \"https://huggingface.co/public-data/dlib_face_landmark_model/resolve/main/shape_predictor_68_face_landmarks.dat\"\n","model_path = \"shape_predictor_68_face_landmarks.dat\"\n","if not os.path.exists(model_path):\n","    os.system(f\"wget {model_url} -O {model_path}\")\n","\n","# Dlib yükleyicilerini başlatma\n","detector = dlib.get_frontal_face_detector()\n","predictor = dlib.shape_predictor(model_path)\n","\n","# Kaydedilecek sonuç dizini\n","output_dir = \"/content/sonuclar\"\n","if not os.path.exists(output_dir):\n","    os.makedirs(output_dir)\n","\n","# Girdi dizini (tüm alt dizinlerle birlikte)\n","input_base_dir = \"/content/drive/MyDrive/Bebek Fotoğrafları/extracted_images\"\n","\n","# Alt dizinlerdeki tüm dosyaları işleme\n","for root, dirs, files in os.walk(input_base_dir):\n","    for filename in files:\n","        if filename.lower().endswith(('.png', '.jpg', '.jpeg')):\n","            img_path = os.path.join(root, filename)\n","\n","            # Resmi yükleme ve gri tonlamaya çevirme\n","            img = cv2.imread(img_path)\n","            img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n","            mask = np.zeros_like(img_gray)\n","\n","            # Yüz tespiti\n","            faces = detector(img_gray)\n","            for face in faces:\n","                landmarks = predictor(img_gray, face)\n","                landmarks_points = []\n","                for n in range(0, 68):\n","                    x = landmarks.part(n).x\n","                    y = landmarks.part(n).y\n","                    landmarks_points.append((x, y))\n","\n","                points = np.array(landmarks_points, np.int32)\n","                convexhull = cv2.convexHull(points)\n","                cv2.fillConvexPoly(mask, convexhull, 255)\n","\n","                face_image = cv2.bitwise_and(img, img, mask=mask)\n","\n","                # Alt dizin yolunu koruyarak sonucu kaydetme\n","                relative_path = os.path.relpath(root, input_base_dir)\n","                output_path = os.path.join(output_dir, relative_path)\n","                if not os.path.exists(output_path):\n","                    os.makedirs(output_path)\n","\n","                result_filename = os.path.join(output_path, f\"result_{filename}\")\n","                cv2.imwrite(result_filename, face_image)\n","\n","print(\"Yüz çıkarma işlemi tamamlandı.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MveuyJyjsDVq","executionInfo":{"status":"ok","timestamp":1721397137968,"user_tz":-180,"elapsed":259403,"user":{"displayName":"Ahmet Enhar Örmeci","userId":"13665870549201093837"}},"outputId":"e6711828-02c9-4d63-8810-bdda74e4bbd9"},"id":"MveuyJyjsDVq","execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Yüz çıkarma işlemi tamamlandı.\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","import shutil\n","\n","# Google Drive'ı bağlama\n","drive.mount('/content/drive')\n","\n","# Kaynak ve hedef dizinler\n","source_dir = \"/content/sonuclar\"\n","target_dir = \"/content/drive/MyDrive/sonuclar\"\n","\n","# Hedef dizin mevcut değilse oluştur\n","if not os.path.exists(target_dir):\n","    os.makedirs(target_dir)\n","\n","# Dizin içeriğini kopyala\n","shutil.copytree(source_dir, target_dir, dirs_exist_ok=True)\n","\n","print(\"Dizin başarıyla Google Drive'a kopyalandı.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"urJERxUER1J_","executionInfo":{"status":"ok","timestamp":1721397415538,"user_tz":-180,"elapsed":43746,"user":{"displayName":"Ahmet Enhar Örmeci","userId":"13665870549201093837"}},"outputId":"57f3c377-dc9a-47e2-8f02-4e69021ee235"},"id":"urJERxUER1J_","execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","Dizin başarıyla Google Drive'a kopyalandı.\n"]}]}],"metadata":{"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.9"},"colab":{"provenance":[{"file_id":"1i1gevexOQrgP4acpXTfA7F886u8QX-gW","timestamp":1721394086978},{"file_id":"1hJ7D4U3njxSyC4sGxRplbrKTywXpHbuK","timestamp":1721387716743},{"file_id":"https://github.com/ml4a/ml4a/blob/master/examples/tools/face_processing.ipynb","timestamp":1721384233659}]}},"nbformat":4,"nbformat_minor":5}